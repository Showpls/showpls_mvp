worker_processes auto;
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream backend {
        server app:5000;
    }

    # HTTP: serve ACME challenges & redirect everything else to HTTPS
    server {
        listen 80;
        server_name app.showpls.io api.showpls.io;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS
    server {
        listen 443 ssl http2;
        server_name app.showpls.io api.showpls.io;

        ssl_certificate /etc/letsencrypt/live/app.showpls.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.showpls.io/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        add_header Strict-Transport-Security "max-age=31536000" always;
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "DENY";
        add_header X-XSS-Protection "1; mode=block";

        root /usr/share/nginx/html;
        index index.html;

        # Static assets
        location /assets/ {
            expires 1y;
            access_log off;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # WebSocket proxy
        location /ws {
            proxy_pass http://backend/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s;
        }

        # API proxy
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # SPA fallback
        location / {
            try_files $uri $uri/ @fallback;
        }

        location @fallback {
            rewrite ^.*$ /index.html last;
        }

        # Block source files
        location ~* \.(tsx|ts|jsx|map)$ {
            return 404;
        }
    }
}
